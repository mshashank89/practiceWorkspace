/* IMPORTANT: Multiple classes and nested static classes are supported */


import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;

//import for Scanner and other utility  classes
import java.util.*;


class TestClass {
	
	private static Print p = new Print();
	
    public static void main(String args[] ) throws Exception {
        /*
         * Read input from stdin and provide input before running
         * Use either of these methods for input

        //BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line = br.readLine();
        int N = Integer.parseInt(line);*/

        //Scanner
        Scanner s = new Scanner(System.in);
        int t = s.nextInt();

        for (int k = 0; k < t; k++) {
        	//test case begin
            int noOfDrivers = s.nextInt();
            int[] driverArray = new int[noOfDrivers];
            
            
            for (int i=0;i<noOfDrivers;i++){
            	driverArray[i] = s.nextInt();
            }
            
            
            int[] sightArray =  findSightOfDriver(driverArray);
            int maxSight = 0;
            int maxSightIndex = 0;
            for (int i=0;i<noOfDrivers;i++){
            	if (maxSight<sightArray[i]){
            		maxSight = sightArray[i];
            		maxSightIndex = i;
            	}
            }
            
            System.out.println();
            p.println(maxSightIndex+1);
            //find max sight
        }       
        p.close();
    }
    
    private static int[] findSightOfDriver(int[] driverArray){
    	int[] sightArray = new int[driverArray.length];
    	
    	for (int j = 0;j<driverArray.length;j++){
    		int nf = 0;
    		int nb = 0;
    		
    		//find nf
    		if (j == driverArray.length -1){
    			nf = 0;
    		}
    		else {
	    		for (int i=j+1;i<driverArray.length;i++){
	    			if (driverArray[i] < driverArray[j]){
	    				nf++;
	    			}
	    		}	
    		}
    		
    		//find nb
    		if (j == 0){
    			nb = 0;
    		}
    		else {
	    		for (int i=0;i<j;i++){
	    			if (driverArray[i] < driverArray[j]){
	    				nb++;
	    			}
	    		}	
    		}
    		
    		int x = nf + nb;
    		int p = j+1;
    		sightArray[j] = x*p;
    		System.out.println(j+1 + "| " + sightArray[j]);
    	}
    	print(sightArray);
    	
    	return sightArray;
    }
    
    private static void print(int[] a){
    	for (int i = 0;i<a.length;i++){
    		System.out.println(i+1 + "| " + a[i]);
    	}
    }
    
    static class Print {
 
        private final BufferedWriter bw;
 
        public Print() {
            bw = new BufferedWriter(new OutputStreamWriter(System.out));
        }
 
        public void print(String str) throws IOException {
            bw.append(str);
        }
        
        public void print(int val) throws IOException {
            bw.append(String.valueOf(val));
        }
        
        public void println(int val) throws IOException {
            print(val);
            bw.append("\n");
        }
        public void println(String str) throws IOException {
            print(str);
            bw.append("\n");
        }
        
        public void println() throws IOException {
            bw.append("\n");
        }
 
        public void close() throws IOException {
            bw.close();
        }
    }
}
