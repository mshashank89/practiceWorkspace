package com.shash.threads.f_reentrant_locks.waitNotifyEquivalent;

import java.util.Random;

public class BankingSimulator {

	private Account account1 = new Account(10000);
	private Account account2 = new Account(10000);
	
	private Random random = new Random();
	
	public void firstThread() throws InterruptedException{
		//perform random transfers of amount from acount1 to account2
		
		for (int i=0;i<10000;i++){
			Account.transfer(account1, account2, random.nextInt(1000));
			Thread.sleep(random.nextInt(1));
		}
	}
	
	public void secondThread() throws InterruptedException{
		//perform random transfers of amount from acount2 to account1
		
		for (int i=0;i<10000;i++){
			Account.transfer(account2, account1, random.nextInt(1000));
			Thread.sleep(random.nextInt(100));
		}
	}
	
	public void finalTotalBalance(){
		System.out.println("Final total balance : " + (account1.getBalance() + account2.getBalance()));
	}
}
