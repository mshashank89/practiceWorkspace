/* IMPORTANT: Multiple classes and nested static classes are supported */


import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStreamWriter;

//import for Scanner and other utility  classes
import java.util.*;


class TestClass {
	
	private static Print p = new Print();
	
    public static void main(String args[] ) throws Exception {
        /*
         * Read input from stdin and provide input before running
         * Use either of these methods for input

        //BufferedReader
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String line = br.readLine();
        int N = Integer.parseInt(line);*/

        //Scanner
        Scanner s = new Scanner(System.in);
        int t = s.nextInt();

        for (int k = 0; k < t; k++) {
            //begin test case
            int n = s.nextInt();
            int[][] a = new int[n][n];
            for (int i=0;i<n;i++){
            	for (int j=0;j<n;j++){
            		a[i][j] = s.nextInt();
            	}
            }
            int count = countInversions(a);
            
            p.println(count);
        }
        p.close();
    }
    
    private static int countInversions(int[][] a){
    	int count = 0;
    	int n = a.length;
    	for (int i=0;i<n;i++){
        	for (int j=0;j<n;j++){
        		for (int p=i;p<n && p>=i;p++){
        			for (int q=j+1;q<n && q>=j;q++){
	            		if (a[i][j] > a[p][q]){
	            			count++;
	            			System.out.println(a[i][j] + " > " +a[p][q]);
	            		}
	            		System.out.println(a[i][j] + " !> " +a[p][q]);
	            	}
	            }
        	}
        }
    	
    	return count;
    }
    
    static class Print {
 
        private final BufferedWriter bw;
 
        public Print() {
            bw = new BufferedWriter(new OutputStreamWriter(System.out));
        }
 
        public void print(String str) throws IOException {
            bw.append(str);
        }
        
        public void print(int val) throws IOException {
            bw.append(String.valueOf(val));
        }
        
        public void println(int val) throws IOException {
            print(val);
            bw.append("\n");
        }
        public void println(String str) throws IOException {
            print(str);
            bw.append("\n");
        }
        
        public void println() throws IOException {
            bw.append("\n");
        }
 
        public void close() throws IOException {
            bw.close();
        }
    }
}
