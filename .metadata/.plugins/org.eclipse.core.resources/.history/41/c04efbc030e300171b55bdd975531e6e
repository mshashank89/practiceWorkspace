package com.shash.threads.h_semaphores;

import java.util.concurrent.Semaphore;

public class Connection {
	
	/*
- Connection is a singleton.
- Sin
	 */
	
	private final static Connection instance = new Connection();
	
	private static final int MAX_CONNECTIONS_AT_ANY_TIME = 10;
	
	private int connections = 0;
	
	private Semaphore semaphore = new Semaphore(MAX_CONNECTIONS_AT_ANY_TIME, true);
	
	private Connection(){
	}
	
	public static Connection getInstance(){
		return instance;
	}
	
	public void connect(){
		
		try {
			semaphore.acquire();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}

		try {
			doConnect();
		}
		finally {
			semaphore.release();
		}
		
	}
	
	private void doConnect(){
		
		connections++;
		System.out.println("No. of connections : " + connections);
		
		try {
			Thread.sleep(2000);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
		
		connections--;
	}

}
